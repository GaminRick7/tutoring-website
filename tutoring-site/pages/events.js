import React, { useState } from 'react'
import { collection, getDocs, Timestamp, orderBy, query } from "firebase/firestore"
import { Grid, Stack, Box } from '@mui/material'
import { db } from "../firebase-config"
import styles from '../styles/Events.module.scss'
import Navbar from '../components/Navbar'
import Head from 'next/head'
import Image from 'next/image'

export async function getServerSideProps(context) {
  const querySnapshot = await getDocs(query(collection(db, "events"), orderBy("startTime")));

  let events = [];

  querySnapshot.forEach((doc) => {
    let event = {};
    event['id'] = doc.id;
    event['data'] = JSON.parse(JSON.stringify(doc.data()));   
    events.push(event);
  })
 
  return {
    props: {events}, // will be passed to the page component as props
  }
}

function getMonth(month) {
  let months = ["JAN", "FEB", "MAR", "APR", "MAY", "JUN", "JUL", "AUG", "SEP", "OCT", "NOV", "DEC"];
  return months[month];
}

function EventItem({event}) {
  const startTimestamp = new Timestamp(parseInt(event.data.startTime.seconds),parseInt(event.data.startTime.nanoseconds));
  const endTimestamp = new Timestamp(parseInt(event.data.endTime.seconds),parseInt(event.data.endTime.nanoseconds));
  
  return (
    <Box className={styles.eventContainer}>
      <Grid container direction="row">
        <Grid container item xs="auto" className={styles.eventDateBox} justifyContent="center" direction="column">
          <p className={styles.eventDateMonth}>{getMonth(startTimestamp.toDate().getMonth())}</p>
          <p className={styles.eventDateDate}>{startTimestamp.toDate().getDate()}</p>
        </Grid> 
        <Grid container item xs className={styles.eventContentBox} spacing={1}>
          <Grid container item xs="auto" alignItems="flex-end" sx={{maxWidth:'100%'}}>
            <p className={styles.eventName}>{event.data.eventName}</p>
          </Grid>
          <Grid container item xs alignItems="flex-end">
            <div className={styles.eventTimeBox}>
              <p className={styles.eventTime}>{`${startTimestamp.toDate().getHours()}:${startTimestamp.toDate().getMinutes()} - ${endTimestamp.toDate().getHours()}:${endTimestamp.toDate().getMinutes()} EST`}</p>
            </div>
          </Grid>
          <Grid container item xs={12} alignItems="flex-start">
            <p className={styles.eventDetails}>{event.data.details}</p>
          </Grid>
        </Grid>
      </Grid>
    </Box>
  );
}

function events({events}) {
  const eventItems = events.map((event) => 
    <EventItem event={event} />
  );

  return (
    <>
      <Head>
        <title>Events</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Navbar></Navbar>

      <Grid container className={styles.topSection} direction="column" justifyContent="center"> 
        <Image src="/images/eventsTopLeftBubbles.svg" layout="raw" width={100} height={100} className={styles.bubblesTopLeft}></Image>
        <Image src="/images/eventsTopRightBubbles.svg" layout="raw" width={100} height={100} className={styles.bubblesTopRight}></Image>

        <Grid item className={styles.titlesContainer}>
            <h1 className={styles.title}>Upcoming Events</h1>
            <p className={styles.subtitle}>Aside from regular lessons, our organization also hosts informational seminars for extra-motivated students, as well as free trial lessons if you are unsure about committing to a course. Check out our upcoming events below!</p>
        </Grid>
      </Grid>

      <Grid container className={styles.botSection} direction="column">
        <Grid item>
          <Stack spacing={2}>
            {eventItems}
          </Stack>
        </Grid>
      </Grid>
    </>
  )
}

export default events